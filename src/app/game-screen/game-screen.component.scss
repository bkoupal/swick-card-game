@use "sass:math";

@mixin cardTransform($offset-x, $offset-y, $angle) {
  transform: translate(
    calc(
      (-50% - var(--table-unit) * $offset-x) *
        math.round(math.cos($angle * 1deg))
    ),
    calc(
      (-50% - var(--table-unit) * $offset-y) *
        math.round(math.sin($angle * 1deg))
    )
  );
}

//First argument should be gameConfig.maxClients + 1
@mixin playingTable($players-count, $min-height, $default-height, $max-width) {
  //Set global variables
  @at-root ::ng-deep :root {
    --playing-table-aspect-ratio: 2/1;
    --table-unit: clamp(
      #{$min-height},
      #{$default-height},
      #{$max-width} / var(--playing-table-aspect-ratio)
    );
  }

  position: relative;
  border-radius: 100%;

  aspect-ratio: var(--playing-table-aspect-ratio);
  height: var(--table-unit);

  > * {
    position: absolute;

    $angleStep: calc(360 / $players-count);
    $angle: 315; // Was 270, now adjusted for 8-position layout

    @for $i from 1 through $players-count {
      &:nth-child(#{$i}) {
        left: calc(50% * math.cos($angle * 1deg) + 50%);
        top: calc(50% * math.sin($angle * 1deg) + 50%);
        transform: translate(-50%, -50%);
        z-index: 10;

        //Used for card enter/leave animations
        --card-translation-x: #{calc(-100% * math.cos($angle * 1deg))};
        --card-translation-y: #{calc(-100% * math.sin($angle * 1deg))};

        //Sets the initial cards position
        ::ng-deep .card-holder {
          @include cardTransform(0.17, 0.12, $angle);

          @screen 2xl {
            @include cardTransform(0.11, 0.09, $angle);
          }
        }
      }

      $angle: $angle + $angleStep;
    }
  }
}

@mixin playingTableMobile($players-count, $width) {
  // SIMPLE RESPONSIVE: Different sizes for different devices
  $table-unit: 220px; // Base size - between too small and too big

  // Device-specific adjustments
  @media (max-width: 480px) {
    // Small iPhones
    $table-unit: 200px;
  }

  @media (min-width: 481px) and (max-width: 768px) {
    // Larger iPhones
    $table-unit: 240px;
  }

  @media (min-width: 769px) and (max-width: 1024px) {
    // iPads - use more space
    $table-unit: 280px;
  }

  $player-row-height: $table-unit * 0.4;
  $non-player-row-height: $table-unit * 0.27;

  // IPHONE PORTRAIT: Much tighter row spacing
  @media (max-width: 768px) and (orientation: portrait) {
    $player-row-height: $table-unit * 0.34; // Reduced from 0.40
    $non-player-row-height: $table-unit * 0.2; // Reduced from 0.27
  }

  @at-root ::ng-deep :root {
    --table-unit: #{$table-unit};
  }

  height: ($players-count - 2) * $non-player-row-height + 2 * $player-row-height;

  position: relative;
  width: $width;
  border-radius: 32px;

  // Keep all your existing player positioning code below...
  > * {
    position: absolute;

    @for $i from 1 through $players-count {
      &:nth-child(#{$i}) {
        @if $i == 1 {
          // Position 1: Top center
          top: 0%;
          left: 50%;
          transform: translate(-50%, -50%);
          --card-translation-y: 100%;
          --card-translation-x: 0%;
        } @else if $i == $players-count {
          // Position 8: Bottom center (current player)
          top: 100%;
          left: 50%;
          transform: translate(-50%, -50%);
          --card-translation-y: -100%;
          --card-translation-x: 0%;
        } @else {
          // Side positions (2,3,4,5,6,7)
          @if $i % 2 == 0 {
            left: 100%;
          } @else {
            left: 0%;
          }

          @if $i == 2 or $i == 3 {
            top: 28%;
          } @else if $i == 4 or $i == 5 {
            top: 48%;
          } @else if $i == 6 or $i == 7 {
            top: 68%;
          }

          transform: translate(-50%, -50%);
          --card-translation-y: 0%;
          --card-translation-x: #{100% - ($i - 1) % 2 * 200%};
        }

        // Card holder positions - ORIGINAL logic with small iPhone adjustment
        ::ng-deep .card-holder {
          @if $i == 1 {
            transform: translateY(calc(50% + 23px));
          } @else if $i == $players-count {
            transform: translateY(calc(-50% - 45px));
          } @else if $i % 2 == 0 {
            // Right side - original logic with small iPhone push
            transform: translateX(calc(-50% - #{$table-unit} * 0.05));
          } @else {
            // Left side - original logic with small iPhone push
            transform: translateX(calc(50% + #{$table-unit} * 0.05));
          }
        }
      }
    }
  }
}

.player-holder {
  @apply bg-green-600;

  // Force rectangle layout on all devices for consistent experience
  @include playingTableMobile(8, 75vw);

  @screen sm {
    @include playingTableMobile(8, 80vw);
  }

  @screen lg {
    @include playingTableMobile(8, 70vw);
  }

  /* Hide app-player components at positions 1 and 3 (array indices 0 and 2) */
  > app-player:nth-child(1),
  > app-player:nth-child(3) {
    display: none !important;
  }
}

//Create font sizes that are relative to playing table size
::ng-deep .table-font-xl {
  font-size: calc(var(--table-unit) * 0.065);
  line-height: calc(var(--table-unit) * 0.095);
}

::ng-deep .table-font-lg {
  font-size: calc(var(--table-unit) * 0.05);
  line-height: calc(var(--table-unit) * 0.075);
}

::ng-deep .table-font {
  font-size: calc(var(--table-unit) * 0.035);
  line-height: calc(var(--table-unit) * 0.055);

  @screen 2xl {
    font-size: calc(var(--table-unit) * 0.024);
    line-height: calc(var(--table-unit) * 0.036);
  }
}

// Add these new mobile-optimized font classes to your game-screen.component.scss file
// Insert after the existing ::ng-deep .table-font section

// ðŸŽ¯ MOBILE-OPTIMIZED PLAYER NAME FONTS
// These classes prioritize mobile readability while maintaining desktop balance

::ng-deep .table-font-player-name {
  // Larger base font size optimized for mobile readability
  font-size: calc(
    var(--table-unit) * 0.055
  ); // ~15.4px on mobile (up from 9.8px)
  line-height: calc(var(--table-unit) * 0.075); // ~21px line height
  font-weight: 600; // Semi-bold for better visibility

  // Tablet optimization
  @media (min-width: 769px) and (max-width: 1024px) {
    font-size: calc(var(--table-unit) * 0.048); // Slightly smaller on tablets
    line-height: calc(var(--table-unit) * 0.065);
  }

  // Desktop scaling
  @media (min-width: 1025px) {
    font-size: calc(var(--table-unit) * 0.042); // Balanced for larger screens
    line-height: calc(var(--table-unit) * 0.058);
  }

  // Extra large desktop (maintain proportions but don't get too big)
  @screen 2xl {
    font-size: calc(var(--table-unit) * 0.042); // Controlled growth
    line-height: calc(var(--table-unit) * 0.058);
  }
}

// Special variant for dealer names (slightly larger for emphasis)
::ng-deep .table-font-dealer-name {
  @extend .table-font-player-name;

  // Dealer names are slightly larger for better hierarchy
  font-size: calc(var(--table-unit) * 0.06); // ~16.8px on mobile
  line-height: calc(var(--table-unit) * 0.08); // ~22.4px line height
  font-weight: 700; // Bold for dealer distinction

  @media (min-width: 769px) and (max-width: 1024px) {
    font-size: calc(var(--table-unit) * 0.052);
    line-height: calc(var(--table-unit) * 0.07);
  }

  @media (min-width: 1025px) {
    font-size: calc(
      var(--table-unit) * 0.095
    ); // Extra large for desktop dealers
    line-height: calc(var(--table-unit) * 0.115);
  }

  @screen 2xl {
    font-size: calc(var(--table-unit) * 0.095); // Very prominent dealer names
    line-height: calc(var(--table-unit) * 0.115);
  }
}

.everyone-passed-announcement {
  animation: fadeInScale 0.6s ease-out;
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

.game-privacy-indicator {
  position: fixed;
  top: 10px;
  right: 10px;
  z-index: 1000;

  mat-chip {
    font-size: 0.8rem;
    font-weight: 500;

    mat-icon {
      font-size: 16px;
      width: 16px;
      height: 16px;
      margin-right: 4px;
    }
  }
}

.room-id-display {
  position: fixed;
  top: 50px;
  right: 10px;
  z-index: 1000;

  mat-chip {
    font-size: 0.75rem;
    font-weight: 500;
    background-color: rgba(244, 67, 54, 0.1) !important;
    border: 1px solid rgba(244, 67, 54, 0.3);

    mat-icon {
      font-size: 14px;
      width: 14px;
      height: 14px;
      margin-right: 4px;
    }
  }
}

/* Mobile responsive adjustments */
@media (max-width: 768px) {
  .game-privacy-indicator {
    top: 5px;
    right: 5px;

    mat-chip {
      font-size: 0.7rem;

      mat-icon {
        font-size: 14px;
        width: 14px;
        height: 14px;
      }
    }
  }

  .room-id-display {
    top: 35px;
    right: 5px;

    mat-chip {
      font-size: 0.65rem;

      mat-icon {
        font-size: 12px;
        width: 12px;
        height: 12px;
      }
    }
  }
}

/* Ensure indicators don't interfere with existing UI */
@media (max-width: 480px) {
  .game-privacy-indicator,
  .room-id-display {
    position: relative;
    top: auto;
    right: auto;
    margin: 5px;
    text-align: center;
  }
}

// MASTER CONTAINER: Fill screen, everything scales relative to this

.game-actions-area {
  flex-shrink: 0; // Never shrink
  padding: 15px;
  background: rgba(0, 0, 0, 0.1); // Subtle background
}

/* Trump card positioning - CENTER ABOVE DEALER */
.trump-card-container {
  position: absolute;
  left: 50%; /* Center horizontally */
  bottom: 15%; /* Position above dealer (bottom player) */
  transform: translate(-50%, 0%); /* Center the card */
  z-index: 20;

  /* Desktop improvements */
  @media (min-width: 1025px) {
    left: 50%;
    bottom: 35%;
    transform: translate(-50%, 0%) scale(0.9);
  }

  /* Ultra-wide desktop */
  @media (min-width: 1400px) {
    left: 50%;
    bottom: 10%;
    transform: translate(-50%, 0%) scale(0.8);
  }

  /* Mobile adjustments */
  @media (max-width: 768px) {
    left: 50%;
    bottom: 27%;
    transform: translate(-50%, 0%) scale(0.8);
  }
}

/* Yellow background box around trump card - RESTORED to original size */
.trump-card-yellow-box {
  background-color: #fbbf24; /* yellow-400 */
  border-radius: 12px;
  padding: 8px;
  box-shadow: 0 4px 12px rgba(251, 191, 36, 0.4);
  border: 2px solid #f59e0b; /* yellow-500 border */

  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 4px;

  /* Subtle animation */
  animation: subtle-glow 3s ease-in-out infinite;

  /* Mobile scaling */
  @media (max-width: 768px) {
    padding: 6px;
    border-radius: 8px;
    border-width: 1px;
  }
}

/* Trump card label */
.trump-card-label {
  font-size: calc(var(--table-unit) * 0.05); /* Your chosen size */
  font-weight: bold;
  color: #92400e; /* yellow-800 - dark yellow for contrast */
  text-align: center;
  white-space: nowrap;
  text-shadow: 1px 1px 2px rgba(255, 255, 255, 0.8);

  @media (max-width: 768px) {
    font-size: calc(var(--table-unit) * 0.05); /* Same on mobile */
  }
}

/* Subtle glow animation */
@keyframes subtle-glow {
  0%,
  100% {
    box-shadow: 0 4px 12px rgba(251, 191, 36, 0.4);
  }
  50% {
    box-shadow: 0 6px 16px rgba(251, 191, 36, 0.6);
  }
}

/* Ensure trump card doesn't interfere with player interactions */
.trump-card-container {
  pointer-events: none; /* Trump card is display-only */
}
